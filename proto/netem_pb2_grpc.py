# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from proto import netem_pb2 as proto_dot_netem__pb2


class NetemStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetVersion = channel.unary_unary(
                '/netem.Netem/GetVersion',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_netem__pb2.VersionResponse.FromString,
                )
        self.PullImages = channel.unary_stream(
                '/netem.Netem/PullImages',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_netem__pb2.PullSrvMsg.FromString,
                )
        self.Clean = channel.unary_unary(
                '/netem.Netem/Clean',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_netem__pb2.AckResponse.FromString,
                )
        self.GetProjects = channel.unary_unary(
                '/netem.Netem/GetProjects',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=proto_dot_netem__pb2.PrjListResponse.FromString,
                )
        self.OpenProject = channel.unary_unary(
                '/netem.Netem/OpenProject',
                request_serializer=proto_dot_netem__pb2.OpenRequest.SerializeToString,
                response_deserializer=proto_dot_netem__pb2.PrjOpenResponse.FromString,
                )
        self.CloseProject = channel.unary_unary(
                '/netem.Netem/CloseProject',
                request_serializer=proto_dot_netem__pb2.ProjectRequest.SerializeToString,
                response_deserializer=proto_dot_netem__pb2.AckResponse.FromString,
                )
        self.SaveProject = channel.unary_unary(
                '/netem.Netem/SaveProject',
                request_serializer=proto_dot_netem__pb2.ProjectRequest.SerializeToString,
                response_deserializer=proto_dot_netem__pb2.FileResponse.FromString,
                )
        self.GetProjectConfigs = channel.unary_unary(
                '/netem.Netem/GetProjectConfigs',
                request_serializer=proto_dot_netem__pb2.ProjectRequest.SerializeToString,
                response_deserializer=proto_dot_netem__pb2.FileResponse.FromString,
                )
        self.GetProjectStatus = channel.unary_unary(
                '/netem.Netem/GetProjectStatus',
                request_serializer=proto_dot_netem__pb2.ProjectRequest.SerializeToString,
                response_deserializer=proto_dot_netem__pb2.StatusResponse.FromString,
                )
        self.ReadNetworkFile = channel.unary_unary(
                '/netem.Netem/ReadNetworkFile',
                request_serializer=proto_dot_netem__pb2.ProjectRequest.SerializeToString,
                response_deserializer=proto_dot_netem__pb2.FileResponse.FromString,
                )
        self.WriteNetworkFile = channel.unary_unary(
                '/netem.Netem/WriteNetworkFile',
                request_serializer=proto_dot_netem__pb2.WNetworkRequest.SerializeToString,
                response_deserializer=proto_dot_netem__pb2.AckResponse.FromString,
                )
        self.Check = channel.unary_unary(
                '/netem.Netem/Check',
                request_serializer=proto_dot_netem__pb2.ProjectRequest.SerializeToString,
                response_deserializer=proto_dot_netem__pb2.AckResponse.FromString,
                )
        self.Reload = channel.unary_unary(
                '/netem.Netem/Reload',
                request_serializer=proto_dot_netem__pb2.ProjectRequest.SerializeToString,
                response_deserializer=proto_dot_netem__pb2.RunResponse.FromString,
                )
        self.Run = channel.unary_unary(
                '/netem.Netem/Run',
                request_serializer=proto_dot_netem__pb2.ProjectRequest.SerializeToString,
                response_deserializer=proto_dot_netem__pb2.RunResponse.FromString,
                )
        self.ReadConfigFiles = channel.unary_unary(
                '/netem.Netem/ReadConfigFiles',
                request_serializer=proto_dot_netem__pb2.NodeRequest.SerializeToString,
                response_deserializer=proto_dot_netem__pb2.ConfigFilesResponse.FromString,
                )
        self.CanRunConsole = channel.unary_unary(
                '/netem.Netem/CanRunConsole',
                request_serializer=proto_dot_netem__pb2.NodeRequest.SerializeToString,
                response_deserializer=proto_dot_netem__pb2.AckResponse.FromString,
                )
        self.Console = channel.stream_stream(
                '/netem.Netem/Console',
                request_serializer=proto_dot_netem__pb2.ConsoleCltMsg.SerializeToString,
                response_deserializer=proto_dot_netem__pb2.ConsoleSrvMsg.FromString,
                )
        self.Start = channel.unary_unary(
                '/netem.Netem/Start',
                request_serializer=proto_dot_netem__pb2.NodeRequest.SerializeToString,
                response_deserializer=proto_dot_netem__pb2.AckResponse.FromString,
                )
        self.Stop = channel.unary_unary(
                '/netem.Netem/Stop',
                request_serializer=proto_dot_netem__pb2.NodeRequest.SerializeToString,
                response_deserializer=proto_dot_netem__pb2.AckResponse.FromString,
                )
        self.Restart = channel.unary_unary(
                '/netem.Netem/Restart',
                request_serializer=proto_dot_netem__pb2.NodeRequest.SerializeToString,
                response_deserializer=proto_dot_netem__pb2.AckResponse.FromString,
                )
        self.SetIfState = channel.unary_unary(
                '/netem.Netem/SetIfState',
                request_serializer=proto_dot_netem__pb2.NodeIfStateRequest.SerializeToString,
                response_deserializer=proto_dot_netem__pb2.AckResponse.FromString,
                )
        self.Capture = channel.unary_stream(
                '/netem.Netem/Capture',
                request_serializer=proto_dot_netem__pb2.NodeInterfaceRequest.SerializeToString,
                response_deserializer=proto_dot_netem__pb2.CaptureSrvMsg.FromString,
                )
        self.CopyFrom = channel.unary_stream(
                '/netem.Netem/CopyFrom',
                request_serializer=proto_dot_netem__pb2.CopyMsg.SerializeToString,
                response_deserializer=proto_dot_netem__pb2.CopyMsg.FromString,
                )
        self.CopyTo = channel.stream_unary(
                '/netem.Netem/CopyTo',
                request_serializer=proto_dot_netem__pb2.CopyMsg.SerializeToString,
                response_deserializer=proto_dot_netem__pb2.AckResponse.FromString,
                )
        self.LinkUpdate = channel.unary_unary(
                '/netem.Netem/LinkUpdate',
                request_serializer=proto_dot_netem__pb2.LinkRequest.SerializeToString,
                response_deserializer=proto_dot_netem__pb2.AckResponse.FromString,
                )


class NetemServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetVersion(self, request, context):
        """general action
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PullImages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Clean(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProjects(self, request, context):
        """Project actions
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OpenProject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CloseProject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SaveProject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProjectConfigs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProjectStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadNetworkFile(self, request, context):
        """Read/Write network topology
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WriteNetworkFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Check(self, request, context):
        """topology actions
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Reload(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Run(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadConfigFiles(self, request, context):
        """Node actions
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CanRunConsole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Console(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Start(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Stop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Restart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetIfState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Capture(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CopyFrom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CopyTo(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LinkUpdate(self, request, context):
        """Link actions
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NetemServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVersion,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=proto_dot_netem__pb2.VersionResponse.SerializeToString,
            ),
            'PullImages': grpc.unary_stream_rpc_method_handler(
                    servicer.PullImages,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=proto_dot_netem__pb2.PullSrvMsg.SerializeToString,
            ),
            'Clean': grpc.unary_unary_rpc_method_handler(
                    servicer.Clean,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=proto_dot_netem__pb2.AckResponse.SerializeToString,
            ),
            'GetProjects': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProjects,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=proto_dot_netem__pb2.PrjListResponse.SerializeToString,
            ),
            'OpenProject': grpc.unary_unary_rpc_method_handler(
                    servicer.OpenProject,
                    request_deserializer=proto_dot_netem__pb2.OpenRequest.FromString,
                    response_serializer=proto_dot_netem__pb2.PrjOpenResponse.SerializeToString,
            ),
            'CloseProject': grpc.unary_unary_rpc_method_handler(
                    servicer.CloseProject,
                    request_deserializer=proto_dot_netem__pb2.ProjectRequest.FromString,
                    response_serializer=proto_dot_netem__pb2.AckResponse.SerializeToString,
            ),
            'SaveProject': grpc.unary_unary_rpc_method_handler(
                    servicer.SaveProject,
                    request_deserializer=proto_dot_netem__pb2.ProjectRequest.FromString,
                    response_serializer=proto_dot_netem__pb2.FileResponse.SerializeToString,
            ),
            'GetProjectConfigs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProjectConfigs,
                    request_deserializer=proto_dot_netem__pb2.ProjectRequest.FromString,
                    response_serializer=proto_dot_netem__pb2.FileResponse.SerializeToString,
            ),
            'GetProjectStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProjectStatus,
                    request_deserializer=proto_dot_netem__pb2.ProjectRequest.FromString,
                    response_serializer=proto_dot_netem__pb2.StatusResponse.SerializeToString,
            ),
            'ReadNetworkFile': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadNetworkFile,
                    request_deserializer=proto_dot_netem__pb2.ProjectRequest.FromString,
                    response_serializer=proto_dot_netem__pb2.FileResponse.SerializeToString,
            ),
            'WriteNetworkFile': grpc.unary_unary_rpc_method_handler(
                    servicer.WriteNetworkFile,
                    request_deserializer=proto_dot_netem__pb2.WNetworkRequest.FromString,
                    response_serializer=proto_dot_netem__pb2.AckResponse.SerializeToString,
            ),
            'Check': grpc.unary_unary_rpc_method_handler(
                    servicer.Check,
                    request_deserializer=proto_dot_netem__pb2.ProjectRequest.FromString,
                    response_serializer=proto_dot_netem__pb2.AckResponse.SerializeToString,
            ),
            'Reload': grpc.unary_unary_rpc_method_handler(
                    servicer.Reload,
                    request_deserializer=proto_dot_netem__pb2.ProjectRequest.FromString,
                    response_serializer=proto_dot_netem__pb2.RunResponse.SerializeToString,
            ),
            'Run': grpc.unary_unary_rpc_method_handler(
                    servicer.Run,
                    request_deserializer=proto_dot_netem__pb2.ProjectRequest.FromString,
                    response_serializer=proto_dot_netem__pb2.RunResponse.SerializeToString,
            ),
            'ReadConfigFiles': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadConfigFiles,
                    request_deserializer=proto_dot_netem__pb2.NodeRequest.FromString,
                    response_serializer=proto_dot_netem__pb2.ConfigFilesResponse.SerializeToString,
            ),
            'CanRunConsole': grpc.unary_unary_rpc_method_handler(
                    servicer.CanRunConsole,
                    request_deserializer=proto_dot_netem__pb2.NodeRequest.FromString,
                    response_serializer=proto_dot_netem__pb2.AckResponse.SerializeToString,
            ),
            'Console': grpc.stream_stream_rpc_method_handler(
                    servicer.Console,
                    request_deserializer=proto_dot_netem__pb2.ConsoleCltMsg.FromString,
                    response_serializer=proto_dot_netem__pb2.ConsoleSrvMsg.SerializeToString,
            ),
            'Start': grpc.unary_unary_rpc_method_handler(
                    servicer.Start,
                    request_deserializer=proto_dot_netem__pb2.NodeRequest.FromString,
                    response_serializer=proto_dot_netem__pb2.AckResponse.SerializeToString,
            ),
            'Stop': grpc.unary_unary_rpc_method_handler(
                    servicer.Stop,
                    request_deserializer=proto_dot_netem__pb2.NodeRequest.FromString,
                    response_serializer=proto_dot_netem__pb2.AckResponse.SerializeToString,
            ),
            'Restart': grpc.unary_unary_rpc_method_handler(
                    servicer.Restart,
                    request_deserializer=proto_dot_netem__pb2.NodeRequest.FromString,
                    response_serializer=proto_dot_netem__pb2.AckResponse.SerializeToString,
            ),
            'SetIfState': grpc.unary_unary_rpc_method_handler(
                    servicer.SetIfState,
                    request_deserializer=proto_dot_netem__pb2.NodeIfStateRequest.FromString,
                    response_serializer=proto_dot_netem__pb2.AckResponse.SerializeToString,
            ),
            'Capture': grpc.unary_stream_rpc_method_handler(
                    servicer.Capture,
                    request_deserializer=proto_dot_netem__pb2.NodeInterfaceRequest.FromString,
                    response_serializer=proto_dot_netem__pb2.CaptureSrvMsg.SerializeToString,
            ),
            'CopyFrom': grpc.unary_stream_rpc_method_handler(
                    servicer.CopyFrom,
                    request_deserializer=proto_dot_netem__pb2.CopyMsg.FromString,
                    response_serializer=proto_dot_netem__pb2.CopyMsg.SerializeToString,
            ),
            'CopyTo': grpc.stream_unary_rpc_method_handler(
                    servicer.CopyTo,
                    request_deserializer=proto_dot_netem__pb2.CopyMsg.FromString,
                    response_serializer=proto_dot_netem__pb2.AckResponse.SerializeToString,
            ),
            'LinkUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.LinkUpdate,
                    request_deserializer=proto_dot_netem__pb2.LinkRequest.FromString,
                    response_serializer=proto_dot_netem__pb2.AckResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'netem.Netem', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Netem(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/netem.Netem/GetVersion',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            proto_dot_netem__pb2.VersionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PullImages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/netem.Netem/PullImages',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            proto_dot_netem__pb2.PullSrvMsg.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Clean(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/netem.Netem/Clean',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            proto_dot_netem__pb2.AckResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProjects(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/netem.Netem/GetProjects',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            proto_dot_netem__pb2.PrjListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OpenProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/netem.Netem/OpenProject',
            proto_dot_netem__pb2.OpenRequest.SerializeToString,
            proto_dot_netem__pb2.PrjOpenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CloseProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/netem.Netem/CloseProject',
            proto_dot_netem__pb2.ProjectRequest.SerializeToString,
            proto_dot_netem__pb2.AckResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SaveProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/netem.Netem/SaveProject',
            proto_dot_netem__pb2.ProjectRequest.SerializeToString,
            proto_dot_netem__pb2.FileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProjectConfigs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/netem.Netem/GetProjectConfigs',
            proto_dot_netem__pb2.ProjectRequest.SerializeToString,
            proto_dot_netem__pb2.FileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProjectStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/netem.Netem/GetProjectStatus',
            proto_dot_netem__pb2.ProjectRequest.SerializeToString,
            proto_dot_netem__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadNetworkFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/netem.Netem/ReadNetworkFile',
            proto_dot_netem__pb2.ProjectRequest.SerializeToString,
            proto_dot_netem__pb2.FileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WriteNetworkFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/netem.Netem/WriteNetworkFile',
            proto_dot_netem__pb2.WNetworkRequest.SerializeToString,
            proto_dot_netem__pb2.AckResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Check(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/netem.Netem/Check',
            proto_dot_netem__pb2.ProjectRequest.SerializeToString,
            proto_dot_netem__pb2.AckResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Reload(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/netem.Netem/Reload',
            proto_dot_netem__pb2.ProjectRequest.SerializeToString,
            proto_dot_netem__pb2.RunResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Run(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/netem.Netem/Run',
            proto_dot_netem__pb2.ProjectRequest.SerializeToString,
            proto_dot_netem__pb2.RunResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReadConfigFiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/netem.Netem/ReadConfigFiles',
            proto_dot_netem__pb2.NodeRequest.SerializeToString,
            proto_dot_netem__pb2.ConfigFilesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CanRunConsole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/netem.Netem/CanRunConsole',
            proto_dot_netem__pb2.NodeRequest.SerializeToString,
            proto_dot_netem__pb2.AckResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Console(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/netem.Netem/Console',
            proto_dot_netem__pb2.ConsoleCltMsg.SerializeToString,
            proto_dot_netem__pb2.ConsoleSrvMsg.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Start(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/netem.Netem/Start',
            proto_dot_netem__pb2.NodeRequest.SerializeToString,
            proto_dot_netem__pb2.AckResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Stop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/netem.Netem/Stop',
            proto_dot_netem__pb2.NodeRequest.SerializeToString,
            proto_dot_netem__pb2.AckResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Restart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/netem.Netem/Restart',
            proto_dot_netem__pb2.NodeRequest.SerializeToString,
            proto_dot_netem__pb2.AckResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetIfState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/netem.Netem/SetIfState',
            proto_dot_netem__pb2.NodeIfStateRequest.SerializeToString,
            proto_dot_netem__pb2.AckResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Capture(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/netem.Netem/Capture',
            proto_dot_netem__pb2.NodeInterfaceRequest.SerializeToString,
            proto_dot_netem__pb2.CaptureSrvMsg.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CopyFrom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/netem.Netem/CopyFrom',
            proto_dot_netem__pb2.CopyMsg.SerializeToString,
            proto_dot_netem__pb2.CopyMsg.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CopyTo(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/netem.Netem/CopyTo',
            proto_dot_netem__pb2.CopyMsg.SerializeToString,
            proto_dot_netem__pb2.AckResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LinkUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/netem.Netem/LinkUpdate',
            proto_dot_netem__pb2.LinkRequest.SerializeToString,
            proto_dot_netem__pb2.AckResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
